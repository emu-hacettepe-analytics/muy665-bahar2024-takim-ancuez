[
  {
    "objectID": "takim.html",
    "href": "takim.html",
    "title": "Takım Üyeleri",
    "section": "",
    "text": "Takım Üyelerimizin detaylı özgemişlerinin yer aldığı kişisel sayfalarına gitmek için sol menüyü veya aşağıdaki linkleri kullanabilirsiniz.\n\nTakım Üyeleri\n\nKerem Asaf Tecirlioğlu\nÖzgür Adıgüzel KAYA\nBüşra Bahar KURT\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "takim/ozgur.html",
    "href": "takim/ozgur.html",
    "title": "Özgür Adıgüzel KAYA",
    "section": "",
    "text": "install.packages(“rmarkdown”)"
  },
  {
    "objectID": "takim/ozgur.html#işler",
    "href": "takim/ozgur.html#işler",
    "title": "Özgür Adıgüzel KAYA",
    "section": "İşler",
    "text": "İşler\n\nKazan Soda Elektrik, Proses Mühendisi , 09.22-devam ediyor",
    "crumbs": [
      "Takım Üyeleri",
      "Özgür Adıgüzel KAYA"
    ]
  },
  {
    "objectID": "takim/ozgur.html#stajlar",
    "href": "takim/ozgur.html#stajlar",
    "title": "Özgür Adıgüzel KAYA",
    "section": "Stajlar",
    "text": "Stajlar\n\nTüpraş, Üretim Stajyeri, 08.21-09.21\nKazan Soda Elektrik, Üretim Stajyeri, 02.22-03.22",
    "crumbs": [
      "Takım Üyeleri",
      "Özgür Adıgüzel KAYA"
    ]
  },
  {
    "objectID": "takim/dusantadic.html#işler",
    "href": "takim/dusantadic.html#işler",
    "title": "Dusan Tadic",
    "section": "İşler",
    "text": "İşler\n\nFirma xxx, pozisyon xx, yıl xxx\nFirma yyy, pozisyon yyy, yıl yyy"
  },
  {
    "objectID": "takim/dusantadic.html#stajlar",
    "href": "takim/dusantadic.html#stajlar",
    "title": "Dusan Tadic",
    "section": "Stajlar",
    "text": "Stajlar\n\nFirma aaa, pozisyon xx, yıl xxx\nFirma bbb, pozisyon yyy, yıl yyy"
  },
  {
    "objectID": "portfolyo.html",
    "href": "portfolyo.html",
    "title": "Portfolyo",
    "section": "",
    "text": "Bu sayfada, MUY665 İş Analitiği dersi 2023-2024 bahar dönemi boyunca yaptığımız analitik çalışmalarını sunmaktayız. Çalışmalarımıza sol menüden ulaşabilirsiniz.\n\n\n\n Back to top"
  },
  {
    "objectID": "portfolyo/calisma1.html",
    "href": "portfolyo/calisma1.html",
    "title": "Çalışma 1",
    "section": "",
    "text": "Bu çalışmada 3 görevimiz var. Bu görevler,"
  },
  {
    "objectID": "portfolyo/calisma1.html#a-sağlanan-kaynaklar-videolardan-özet-sağlamak",
    "href": "portfolyo/calisma1.html#a-sağlanan-kaynaklar-videolardan-özet-sağlamak",
    "title": "Çalışma 1",
    "section": "(a) Sağlanan kaynaklar videolardan özet sağlamak",
    "text": "(a) Sağlanan kaynaklar videolardan özet sağlamak",
    "crumbs": [
      "Porfolyo",
      "Çalışma 1"
    ]
  },
  {
    "objectID": "portfolyo/calisma1.html#b-özel-fonksiyonlar-ve-döngüler-ile-istatistiksel-özetleri-keşfetmek",
    "href": "portfolyo/calisma1.html#b-özel-fonksiyonlar-ve-döngüler-ile-istatistiksel-özetleri-keşfetmek",
    "title": "Çalışma 1",
    "section": "(b) Özel fonksiyonlar ve döngüler ile istatistiksel özetleri keşfetmek",
    "text": "(b) Özel fonksiyonlar ve döngüler ile istatistiksel özetleri keşfetmek\n\ncustom_summary &lt;- function(vector){\n    mean &lt;- mean(vector)\n    median &lt;- median(vector)\n    min &lt;- min(vector)\n    max &lt;- max(vector)\n    sd &lt;- sd(vector)\n    return(c(mean, median, min, max, sd))\n}\n\n\n{\n  print(\"Mean, Median, Min, Max, SD\")\n  for (param in 1:length(mtcars)) {\n      print(custom_summary(mtcars[,param]))\n  }\n}\n\n[1] \"Mean, Median, Min, Max, SD\"\n[1] 20.090625 19.200000 10.400000 33.900000  6.026948\n[1] 6.187500 6.000000 4.000000 8.000000 1.785922\n[1] 230.7219 196.3000  71.1000 472.0000 123.9387\n[1] 146.68750 123.00000  52.00000 335.00000  68.56287\n[1] 3.5965625 3.6950000 2.7600000 4.9300000 0.5346787\n[1] 3.2172500 3.3250000 1.5130000 5.4240000 0.9784574\n[1] 17.848750 17.710000 14.500000 22.900000  1.786943\n[1] 0.4375000 0.0000000 0.0000000 1.0000000 0.5040161\n[1] 0.4062500 0.0000000 0.0000000 1.0000000 0.4989909\n[1] 3.6875000 4.0000000 3.0000000 5.0000000 0.7378041\n[1] 2.8125 2.0000 1.0000 8.0000 1.6152\n\napply(mtcars, 2, custom_summary)\n\n           mpg      cyl     disp        hp      drat        wt      qsec\n[1,] 20.090625 6.187500 230.7219 146.68750 3.5965625 3.2172500 17.848750\n[2,] 19.200000 6.000000 196.3000 123.00000 3.6950000 3.3250000 17.710000\n[3,] 10.400000 4.000000  71.1000  52.00000 2.7600000 1.5130000 14.500000\n[4,] 33.900000 8.000000 472.0000 335.00000 4.9300000 5.4240000 22.900000\n[5,]  6.026948 1.785922 123.9387  68.56287 0.5346787 0.9784574  1.786943\n            vs        am      gear   carb\n[1,] 0.4375000 0.4062500 3.6875000 2.8125\n[2,] 0.0000000 0.0000000 4.0000000 2.0000\n[3,] 0.0000000 0.0000000 3.0000000 1.0000\n[4,] 1.0000000 1.0000000 5.0000000 8.0000\n[5,] 0.5040161 0.4989909 0.7378041 1.6152"
  },
  {
    "objectID": "portfolyo/calisma1.html#c-vektör-verilerini-aramak-ve-kullanmak",
    "href": "portfolyo/calisma1.html#c-vektör-verilerini-aramak-ve-kullanmak",
    "title": "Çalışma 1",
    "section": "(c) Vektör verilerini aramak ve kullanmak",
    "text": "(c) Vektör verilerini aramak ve kullanmak\n\nlibrary(\"dslabs\")\n\nbuf = na_example\n\nprint(buf)\n\n   [1]  2  1  3  2  1  3  1  4  3  2  2 NA  2  2  1  4 NA  1  1  2  1  2  2  1\n  [25]  2  5 NA  2  2  3  1  2  4  1  1  1  4  5  2  3  4  1  2  4  1  1  2  1\n  [49]  5 NA NA NA  1  1  5  1  3  1 NA  4  4  7  3  2 NA NA  1 NA  4  1  2  2\n  [73]  3  2  1  2  2  4  3  4  2  3  1  3  2  1  1  1  3  1 NA  3  1  2  2  1\n  [97]  2  2  1  1  4  1  1  2  3  3  2  2  3  3  3  4  1  1  1  2 NA  4  3  4\n [121]  3  1  2  1 NA NA NA NA  1  5  1  2  1  3  5  3  2  2 NA NA NA NA  3  5\n [145]  3  1  1  4  2  4  3  3 NA  2  3  2  6 NA  1  1  2  2  1  3  1  1  5 NA\n [169] NA  2  4 NA  2  5  1  4  3  3 NA  4  3  1  4  1  1  3  1  1 NA NA  3  5\n [193]  2  2  2  3  1  2  2  3  2  1 NA  2 NA  1 NA NA  2  1  1 NA  3 NA  1  2\n [217]  2  1  3  2  2  1  1  2  3  1  1  1  4  3  4  2  2  1  4  1 NA  5  1  4\n [241] NA  3 NA NA  1  1  5  2  3  3  2  4 NA  3  2  5 NA  2  3  4  6  2  2  2\n [265] NA  2 NA  2 NA  3  3  2  2  4  3  1  4  2 NA  2  4 NA  6  2  3  1 NA  2\n [289]  2 NA  1  1  3  2  3  3  1 NA  1  4  2  1  1  3  2  1  2  3  1 NA  2  3\n [313]  3  2  1  2  3  5  5  1  2  3  3  1 NA NA  1  2  4 NA  2  1  1  1  3  2\n [337]  1  1  3  4 NA  1  2  1  1  3  3 NA  1  1  3  5  3  2  3  4  1  4  3  1\n [361] NA  2  1  2  2  1  2  2  6  1  2  4  5 NA  3  4  2  1  1  4  2  1  1  1\n [385]  1  2  1  4  4  1  3 NA  3  3 NA  2 NA  1  2  1  1  4  2  1  4  4 NA  1\n [409]  2 NA  3  2  2  2  1  4  3  6  1  2  3  1  3  2  2  2  1  1  3  2  1  1\n [433]  1  3  2  2 NA  4  4  4  1  1 NA  4  3 NA  1  3  1  3  2  4  2  2  2  3\n [457]  2  1  4  3 NA  1  4  3  1  3  2 NA  3 NA  1  3  1  4  1  1  1  2  4  3\n [481]  1  2  2  2  3  2  3  1  1 NA  3  2  1  1  2 NA  2  2  2  3  3  1  1  2\n [505] NA  1  2  1  1  3  3  1  3  1  1  1  1  1  2  5  1  1  2  2  1  1 NA  1\n [529]  4  1  2  4  1  3  2 NA  1  1 NA  2  1  1  4  2  3  3  1  5  3  1  1  2\n [553] NA  1  1  3  1  3  2  4 NA  2  3  2  1  2  1  1  1  2  2  3  1  5  2 NA\n [577]  2 NA  3  2  2  2  1  5  3  2  3  1 NA  3  1  2  2  2  1  2  2  4 NA  6\n [601]  1  2 NA  1  1  2  2  3 NA  3  2  3  3  4  2 NA  2 NA  4 NA  1  1  2  2\n [625]  3  1  1  1  3 NA  2  5 NA  7  1 NA  4  3  3  1 NA  1  1  1  1  3  2  4\n [649]  2  2  3 NA NA  1  4  3  2  2  2  3  2  4  2  2  4 NA NA NA  6  3  3  1\n [673]  4  4  2  1 NA  1  6 NA  3  3  2  1  1  6 NA  1  5  1 NA  2  6  2 NA  4\n [697]  1  3  1  2 NA  1  1  3  1  2  4  2  1  3  2  4  3  2  2  1  1  5  6  4\n [721]  2  2  2  2  4 NA  1  2  2  2  2  4  5 NA NA NA  4  3  3  3  2  4  2  4\n [745] NA NA NA NA  2  1 NA  2  4  3  2 NA  2  3  1  3  4 NA  1  2  1  2 NA  3\n [769]  1  2  1  2  1  2  1  2  2  2  2  1  1  3  3  1  3  4  3 NA NA  4  2  3\n [793]  2  1  3  2  4  2  2  3  1  2  4  3  3  4 NA  1  4  2  1  1  1  3  1  5\n [817]  2  2  4  2 NA  1  3  1  2 NA  1  2  1  2  1 NA  1  3  2  3  2 NA  2  1\n [841]  4  2 NA NA NA  2  4  2 NA NA  3  1 NA  5  5  2  2  2 NA  2  1  3  1  3\n [865]  2  4  2  4 NA  4  1  2  3  2  3  3  2  3  2  2  2  1  3  2  4  2 NA  3\n [889]  3  2  2 NA NA  3  2  1  2  4  1  1  1  1  4  3  2 NA  3  2 NA  1 NA  3\n [913]  2  1  1  1  2 NA  2  2  3  3  2 NA NA  4  5  2  2  2  1  2  3  1  3  3\n [937]  4  3 NA  1  1  1 NA  4  3  5  1  1  2 NA  2  2  2  2  5  2  2  3  1  2\n [961]  3 NA  1  2 NA NA  2 NA  3  1  1  2  5  3  5  1  1  4 NA  2  1  3  1  1\n [985]  2  4  3  3  3 NA  1  1  2  2  1  1  2  2 NA  2\n\ncounter = 0\n\nfor (param in 1:length(buf)) {\n    if(is.na(buf[param])){\n        buf [param] = 665\n        counter = counter + 1\n\n    }\n    \n}\n\n\n{\n    format = sprintf(\"Number of NA variables in na_example vector is %d\", counter)\n    print(format)\n    print(buf)\n}\n\n[1] \"Number of NA variables in na_example vector is 145\"\n   [1]   2   1   3   2   1   3   1   4   3   2   2 665   2   2   1   4 665   1\n  [19]   1   2   1   2   2   1   2   5 665   2   2   3   1   2   4   1   1   1\n  [37]   4   5   2   3   4   1   2   4   1   1   2   1   5 665 665 665   1   1\n  [55]   5   1   3   1 665   4   4   7   3   2 665 665   1 665   4   1   2   2\n  [73]   3   2   1   2   2   4   3   4   2   3   1   3   2   1   1   1   3   1\n  [91] 665   3   1   2   2   1   2   2   1   1   4   1   1   2   3   3   2   2\n [109]   3   3   3   4   1   1   1   2 665   4   3   4   3   1   2   1 665 665\n [127] 665 665   1   5   1   2   1   3   5   3   2   2 665 665 665 665   3   5\n [145]   3   1   1   4   2   4   3   3 665   2   3   2   6 665   1   1   2   2\n [163]   1   3   1   1   5 665 665   2   4 665   2   5   1   4   3   3 665   4\n [181]   3   1   4   1   1   3   1   1 665 665   3   5   2   2   2   3   1   2\n [199]   2   3   2   1 665   2 665   1 665 665   2   1   1 665   3 665   1   2\n [217]   2   1   3   2   2   1   1   2   3   1   1   1   4   3   4   2   2   1\n [235]   4   1 665   5   1   4 665   3 665 665   1   1   5   2   3   3   2   4\n [253] 665   3   2   5 665   2   3   4   6   2   2   2 665   2 665   2 665   3\n [271]   3   2   2   4   3   1   4   2 665   2   4 665   6   2   3   1 665   2\n [289]   2 665   1   1   3   2   3   3   1 665   1   4   2   1   1   3   2   1\n [307]   2   3   1 665   2   3   3   2   1   2   3   5   5   1   2   3   3   1\n [325] 665 665   1   2   4 665   2   1   1   1   3   2   1   1   3   4 665   1\n [343]   2   1   1   3   3 665   1   1   3   5   3   2   3   4   1   4   3   1\n [361] 665   2   1   2   2   1   2   2   6   1   2   4   5 665   3   4   2   1\n [379]   1   4   2   1   1   1   1   2   1   4   4   1   3 665   3   3 665   2\n [397] 665   1   2   1   1   4   2   1   4   4 665   1   2 665   3   2   2   2\n [415]   1   4   3   6   1   2   3   1   3   2   2   2   1   1   3   2   1   1\n [433]   1   3   2   2 665   4   4   4   1   1 665   4   3 665   1   3   1   3\n [451]   2   4   2   2   2   3   2   1   4   3 665   1   4   3   1   3   2 665\n [469]   3 665   1   3   1   4   1   1   1   2   4   3   1   2   2   2   3   2\n [487]   3   1   1 665   3   2   1   1   2 665   2   2   2   3   3   1   1   2\n [505] 665   1   2   1   1   3   3   1   3   1   1   1   1   1   2   5   1   1\n [523]   2   2   1   1 665   1   4   1   2   4   1   3   2 665   1   1 665   2\n [541]   1   1   4   2   3   3   1   5   3   1   1   2 665   1   1   3   1   3\n [559]   2   4 665   2   3   2   1   2   1   1   1   2   2   3   1   5   2 665\n [577]   2 665   3   2   2   2   1   5   3   2   3   1 665   3   1   2   2   2\n [595]   1   2   2   4 665   6   1   2 665   1   1   2   2   3 665   3   2   3\n [613]   3   4   2 665   2 665   4 665   1   1   2   2   3   1   1   1   3 665\n [631]   2   5 665   7   1 665   4   3   3   1 665   1   1   1   1   3   2   4\n [649]   2   2   3 665 665   1   4   3   2   2   2   3   2   4   2   2   4 665\n [667] 665 665   6   3   3   1   4   4   2   1 665   1   6 665   3   3   2   1\n [685]   1   6 665   1   5   1 665   2   6   2 665   4   1   3   1   2 665   1\n [703]   1   3   1   2   4   2   1   3   2   4   3   2   2   1   1   5   6   4\n [721]   2   2   2   2   4 665   1   2   2   2   2   4   5 665 665 665   4   3\n [739]   3   3   2   4   2   4 665 665 665 665   2   1 665   2   4   3   2 665\n [757]   2   3   1   3   4 665   1   2   1   2 665   3   1   2   1   2   1   2\n [775]   1   2   2   2   2   1   1   3   3   1   3   4   3 665 665   4   2   3\n [793]   2   1   3   2   4   2   2   3   1   2   4   3   3   4 665   1   4   2\n [811]   1   1   1   3   1   5   2   2   4   2 665   1   3   1   2 665   1   2\n [829]   1   2   1 665   1   3   2   3   2 665   2   1   4   2 665 665 665   2\n [847]   4   2 665 665   3   1 665   5   5   2   2   2 665   2   1   3   1   3\n [865]   2   4   2   4 665   4   1   2   3   2   3   3   2   3   2   2   2   1\n [883]   3   2   4   2 665   3   3   2   2 665 665   3   2   1   2   4   1   1\n [901]   1   1   4   3   2 665   3   2 665   1 665   3   2   1   1   1   2 665\n [919]   2   2   3   3   2 665 665   4   5   2   2   2   1   2   3   1   3   3\n [937]   4   3 665   1   1   1 665   4   3   5   1   1   2 665   2   2   2   2\n [955]   5   2   2   3   1   2   3 665   1   2 665 665   2 665   3   1   1   2\n [973]   5   3   5   1   1   4 665   2   1   3   1   1   2   4   3   3   3 665\n [991]   1   1   2   2   1   1   2   2 665   2"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Takım: Ançüez",
    "section": "",
    "text": "MUY665-İş Analitiği dersi takım sayfamıza hoş geldiniz.\nBu sitede dönem boyu olan çalışmalarımızı paylaşıyor olacağız.\nLütfen faaliyetlerimizi görmek için için bizi takipte kalın."
  },
  {
    "objectID": "index.html#takım-üyeleri",
    "href": "index.html#takım-üyeleri",
    "title": "Takım: Ançüez",
    "section": "Takım Üyeleri",
    "text": "Takım Üyeleri\n\nKerem Asaf Tecirlioğlu\nÖzgür Adıgüzel KAYA\nBüşra Bahar KURT\nMuhammed Said AKÇAY\nAbdülhamit Aksakal"
  },
  {
    "objectID": "index.html#proje-adı",
    "href": "index.html#proje-adı",
    "title": "Takım: Ançüez",
    "section": "Proje Adı",
    "text": "Proje Adı\nTürkiye’de Taşıt Sahipliği ve Kullanımı: Veriler ve Eğilimler"
  },
  {
    "objectID": "index.html#proje-konusu",
    "href": "index.html#proje-konusu",
    "title": "Takım: Ançüez",
    "section": "Proje Konusu",
    "text": "Proje Konusu\nProjemiz Türkiye’deki araç demografini incelemek ve bu konular hakkında faydalı çıkarımlar yapabilmek. Bunlar arasında gelecek projeksiyonları, anlık durum, anlık durumun trend eğrileri gibi grafikler yer almakta. Sağlanan veriler ve medya sayesinde yapılabilecek iyileştirmeler, gelecekte sektörel anlamda ne gibi yönlere gidilebileceği ve nüfusün otomotiv alımı ve sahipliğinde ne gibi bir rol oynadığını inceledik."
  },
  {
    "objectID": "index.html#veri-seti-hakkında-özet-bilgi",
    "href": "index.html#veri-seti-hakkında-özet-bilgi",
    "title": "Takım: Ançüez",
    "section": "Veri Seti Hakkında Özet Bilgi",
    "text": "Veri Seti Hakkında Özet Bilgi\nTürkiye’de türlerine göre (otomobil,kamyon vb.) kara taşıtı sayıları, illere göre toplam kara taşıtı sayıları ve yakıt türlerine göre toplam kara taşıtı sayılarının yıllar içindeki değişimini gösteren veri setlerini kullanarak analizlerimizi yaptık."
  },
  {
    "objectID": "index.html#sonuçlar",
    "href": "index.html#sonuçlar",
    "title": "Takım: Ançüez",
    "section": "Sonuçlar",
    "text": "Sonuçlar\n\nMotorlu Kara Taşıtları: TÜİK’in 2023-2024 verilerine göre, Türkiye’de motorlu kara taşıtlarının toplam sayısında önemli bir artış görülmüştür. Bu anlamda otomobiller, kamyonetler ve motosikletler özellikle dikkat çekmektedir. Ekonomideki iyileştirmeler ve uygun kredi koşulları, otomobil sayısının artmasına neden olabilir. Ticaret ve lojistik sektörlerindeki büyüme, motosiklet ve kamyonet sayısının artmasına neden olabilir. Genel trend, gelecekte motorlu taşıt sayısının artmaya devam edeceğini göstermektedir.\nElektrikli Araçlar: Türkiye, elektrikli araç kullanımı trendinde diğer Avrupa ülkelerine göre geride kalmıştır. 2022 yılında satılan araçların %90’ının petrol türevli yakıtlı araçlardan oluşması bu durumu açıkça göstermektedir. Ancak, tahmin modelleri, elektrikli araç sayısında önümüzdeki yıllarda önemli bir artış yaşanacağını öngörmektedir. Bu artış, teşvik politikaları, artan çevre bilinci ve teknolojideki gelişmelerin etkisiyle hızlanacaktır. Dolayısıyla, Türkiye’nin elektrikli araç pazarında gelecekteki büyüme potansiyeli oldukça yüksektir.\nMotorsikletler ve Bisikletler: Şehirlerde kentleşmeninde etkisiyle alım yönelimi otomobil tarafında olsa da, trafik ve yaya kargaşasında insanların motorsiklet yada bisiklet gibi daha küçük taşıtları kullanmaya yöneldiği belirlenmiştir. Mikromobilite ve bisiklet alanındaki trendlerde dağılım daha dağınıkken trafikte kullanılan motor sayısında trende daha yakın komşuluk izlenmekte. Bu noktada motorsiklet kullanımının daha çok benimsendiği ve mikromobilite, bisiklet gibi araçların henüz yeni topluma kazandırılmakta olduğu görülmektedir"
  },
  {
    "objectID": "portfolyo/calisma2.html",
    "href": "portfolyo/calisma2.html",
    "title": "Çalışma 2",
    "section": "",
    "text": "(Aşağıdakiler örnek olarak verilmiştir.)\nBu çalışmada 3 görevimiz var. Bu görevler….. Bunlara sırayla aşağıda cevap arıyoruz."
  },
  {
    "objectID": "portfolyo/calisma2.html#a",
    "href": "portfolyo/calisma2.html#a",
    "title": "Çalışma 2",
    "section": "(a)",
    "text": "(a)\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "portfolyo/calisma2.html#b",
    "href": "portfolyo/calisma2.html#b",
    "title": "Çalışma 2",
    "section": "(b)",
    "text": "(b)"
  },
  {
    "objectID": "proje.html",
    "href": "proje.html",
    "title": "Türkiye’de Taşıt Sahipliği ve Kullanımı: Veriler ve Eğilimler",
    "section": "",
    "text": "Proje sayfamıza hoş geldiniz.\nTakım Üyeleri:\nBüşra Bahar KURT\nKerem Asaf TECİRLİOĞLU\nÖzgür Adıgüzel KAYA\nMuhammed Said AKÇAY\nAbdülhamit Aksakal"
  },
  {
    "objectID": "proje.html#veri-kaynağı",
    "href": "proje.html#veri-kaynağı",
    "title": "Türkiye’de Taşıt Sahipliği ve Kullanımı: Veriler ve Eğilimler",
    "section": "2.1 Veri Kaynağı",
    "text": "2.1 Veri Kaynağı\nTÜİK - https://data.tuik.gov.tr/Bulten/Index?p=Motorlu-Kara-Tasitlari-Ocak-2024-53453"
  },
  {
    "objectID": "proje.html#veri-hakkında-genel-bilgiler",
    "href": "proje.html#veri-hakkında-genel-bilgiler",
    "title": "Türkiye’de Taşıt Sahipliği ve Kullanımı: Veriler ve Eğilimler",
    "section": "2.2 Veri Hakkında Genel Bilgiler",
    "text": "2.2 Veri Hakkında Genel Bilgiler\nxxxxxx"
  },
  {
    "objectID": "proje.html#tercih-sebebi",
    "href": "proje.html#tercih-sebebi",
    "title": "Türkiye’de Taşıt Sahipliği ve Kullanımı: Veriler ve Eğilimler",
    "section": "2.2 Tercih Sebebi",
    "text": "2.2 Tercih Sebebi\nVeriler güvenilir olduğu için çalışmanın daha sağlıklı olacak olmasından dolayı bu veri setleri seçilmiştir. Ayrıca Türkiye’de kara taşıtlarının dağılımlarının nasıl olduğuyla ilgili ortaklaşa bir merak oluştuğu için buradaki veri setleri kullanılmıştır."
  },
  {
    "objectID": "proje.html#ön-işleme",
    "href": "proje.html#ön-işleme",
    "title": "Türkiye’de Taşıt Sahipliği ve Kullanımı: Veriler ve Eğilimler",
    "section": "2.3 Ön İşleme",
    "text": "2.3 Ön İşleme\nVeriler genel olarak düzenli ve anlaşılırdı. Eksik veri sayısının çok olmaması kolaylık sağladı. Ancak istenen analizlerin yapıalbilmesi için eldeki verilere ek olarak başka veriler bulunarak bu veriler birleştirildi. Düzgün bir Excel formatından R’a aktarılabilmesi için veriler düzenlendi ve uygun formata getirildi."
  },
  {
    "objectID": "proje.html#keşifsel-veri-analizi",
    "href": "proje.html#keşifsel-veri-analizi",
    "title": "Türkiye’de Taşıt Sahipliği ve Kullanımı: Veriler ve Eğilimler",
    "section": "3.7 Keşifsel Veri Analizi",
    "text": "3.7 Keşifsel Veri Analizi"
  },
  {
    "objectID": "proje.html#trend-analizi",
    "href": "proje.html#trend-analizi",
    "title": "Türkiye’de Taşıt Sahipliği ve Kullanımı: Veriler ve Eğilimler",
    "section": "4.5 Trend Analizi",
    "text": "4.5 Trend Analizi\nxxxxxx"
  },
  {
    "objectID": "proje.html#model-uydurma",
    "href": "proje.html#model-uydurma",
    "title": "Türkiye’de Taşıt Sahipliği ve Kullanımı: Veriler ve Eğilimler",
    "section": "3.12 Model Uydurma",
    "text": "3.12 Model Uydurma\nxxxxxx"
  },
  {
    "objectID": "proje.html#sonuçlar",
    "href": "proje.html#sonuçlar",
    "title": "Türkiye’de Taşıt Sahipliği ve Kullanımı: Veriler ve Eğilimler",
    "section": "4.6 Sonuçlar",
    "text": "4.6 Sonuçlar\nxxxxxx"
  },
  {
    "objectID": "takim/kerem.html#işler",
    "href": "takim/kerem.html#işler",
    "title": "Kerem Asaf Tecirlioğlu",
    "section": "İşler",
    "text": "İşler\n\nAIS Field, Yazılım Mühendisi, 2023-2024\nSerbest Meslek, 2022-2023\nGeodo Technology, Co-Founder, 2017-2022\nAraştırmacı Çocuk Merkezi, Eğitmen, 2016-2018"
  },
  {
    "objectID": "takim/kerem.html#stajlar",
    "href": "takim/kerem.html#stajlar",
    "title": "Kerem Asaf Tecirlioğlu",
    "section": "Stajlar",
    "text": "Stajlar\n\nSilverline, Otomasyon ve Üretim Mühendisi , 2018\nODTÜ Robot Topluluğu, Yönetim Kurulu Üyesi , 2015-2017"
  },
  {
    "objectID": "takim/szymanski.html#işler",
    "href": "takim/szymanski.html#işler",
    "title": "Sebastian Szymański",
    "section": "İşler",
    "text": "İşler\n\nFirma xxx, pozisyon xx, yıl xxx\nFirma yyy, pozisyon yyy, yıl yyy",
    "crumbs": [
      "Takım Üyeleri",
      "Sebastian Szymański"
    ]
  },
  {
    "objectID": "takim/szymanski.html#stajlar",
    "href": "takim/szymanski.html#stajlar",
    "title": "Sebastian Szymański",
    "section": "Stajlar",
    "text": "Stajlar\n\nFirma aaa, pozisyon xx, yıl xxx\nFirma bbb, pozisyon yyy, yıl yyy",
    "crumbs": [
      "Takım Üyeleri",
      "Sebastian Szymański"
    ]
  },
  {
    "objectID": "docs/takim/bbaharkurt.html#işler",
    "href": "docs/takim/bbaharkurt.html#işler",
    "title": "Busra Bahar Kurt",
    "section": "İşler",
    "text": "İşler\n\nHuawei Telekomunikasyon A.Ş. , Yazılım Test Mühendislik Yöneticisi, 2021 - devam ediyor.\nİnnova Bilişim Çözümleri A.Ş. , Yazılım Test Mühendisi, 2020 - 2021\nSmartICT Bilişim A.Ş. , Yazılım Test Mühendisi, 2018 - 2020"
  },
  {
    "objectID": "docs/takim/bbaharkurt.html#stajlar",
    "href": "docs/takim/bbaharkurt.html#stajlar",
    "title": "Busra Bahar Kurt",
    "section": "Stajlar",
    "text": "Stajlar\n\nYapı Kredi Teknoloji, Stajyer Mühendis - Uygulama Altyapısı Tasarım ve Planlama, 2016\nYapı Kredi Teknoloji, Stajyer Mühendis - Altyapı Yönetim Araçları, 2015\nYapı Kredi Teknoloji, Stajyer Mühendis - Uygulama Mimarisi ve Kalite Güvencesi, 2014"
  },
  {
    "objectID": "takim/bbaharkurt.html#işler",
    "href": "takim/bbaharkurt.html#işler",
    "title": "Büşra Bahar Kurt",
    "section": "İşler",
    "text": "İşler\n\nHuawei Telekomünikasyon A.Ş. , Yazılım Test Mühendislik Yöneticisi, 2021 - Halen\nİnnova Bilişim Çözümleri A.Ş. , Yazılım Test Mühendisi, 2020 - 2021\nSmartICT Bilişim A.Ş. , Yazılım Test Mühendisi, 2018 - 2020",
    "crumbs": [
      "Takım Üyeleri",
      "Büşra Bahar Kurt"
    ]
  },
  {
    "objectID": "takim/bbaharkurt.html#stajlar",
    "href": "takim/bbaharkurt.html#stajlar",
    "title": "Büşra Bahar Kurt",
    "section": "Stajlar",
    "text": "Stajlar\n\nYapı Kredi Teknoloji, Stajyer Mühendis - Uygulama Altyapısı Tasarım ve Planlama, 2016\nYapı Kredi Teknoloji, Stajyer Mühendis - Altyapı Yönetim Araçları, 2015\nYapı Kredi Teknoloji, Stajyer Mühendis - Uygulama Mimarisi ve Kalite Güvencesi, 2014",
    "crumbs": [
      "Takım Üyeleri",
      "Büşra Bahar Kurt"
    ]
  },
  {
    "objectID": "portfolyo/calisma1.html#a-sağlanan-kaynak-videolardan-özet-sağlamak",
    "href": "portfolyo/calisma1.html#a-sağlanan-kaynak-videolardan-özet-sağlamak",
    "title": "Çalışma 1",
    "section": "(a) Sağlanan kaynak videolardan özet sağlamak",
    "text": "(a) Sağlanan kaynak videolardan özet sağlamak\n\nEndüstri mühendisleri yoğunlukla optimizasyon problemleri ile uğraşmaktadırlar. Bu optimizasyon problemlerini simülasyonlar, matematik modellemeleri, stokastik ya da olasıksal modellemeler gibi araçlar kullanarak çözmeye çalışmaktadırlar. Son zamanlarda da gelişen teknoloji ile bu araçlar arasında yapay zeka da yer edinmiştir. Bu problemlere bir örnek, bir ayakkabı mağaza zincirinde, hangi dükkanlarda; hangi numara ayakkabıdan kaç adet bulunması gerektiği gibi bir optimizasyon problemi verilebilir. Problemin çözüm sürecinde, belirlenen problemin nedenini araştırmak, sayısal verilerle ifade etmek ve yine bu sayısal verileri kullanarak sorunlara ilgili yöntemlerle çözüm getirmek gibi ilerleyiş adımları bulunmaktadır. Daha sonrasında alternatifler üretilerek çözümlemelere karar verilmekte ve çözüm gerçekleştirilmektedir.\nYüksek teknoloji araçların da kullanıldığı niş bir uygulama örneği olarak kereste üretici bir firmanın, düz kereste ürününün üretim verimi arttırmayı istemesi verilebilir. Firma, düz kereste daha yüksek getiri sağladığı için karlılığını arttırmayı hedeflemektedir. Örnek projede, kerestelerin fotoğraf verileri kullanılarak, bilgisayarlı görü ile işlendikten sonra, geleneksel makine öğrenmesi ile kerestelerin eğrilme davranışıyla ilgili tahminler çıkarımlanmıştır. Bu metotta, yapay zeka kullanımından önce bir ön-işleme süreci gerçekleştirilmekte olup, bu süreçte kerestelerin; budak noktaları, genç yaşlı odun dağılımı, halka oryantasyonu gibi anahtar veriler sayısal olarak ifade edilmektedir. Bir ön işleme metodu kullanılan projede, öznitelik çıkarımı çalışan tarafından yapılmaktadır, dolayısı ile, projede kullanılan yapay zeka metodu geleneksel öğrenmedir. Diğer yapay zeka metodları olarak derin öğrenmeyi yada pekiştirmeli öğrenmeyi sayabiliriz. Bu öğrenme metotlarında öznitelik çıkarımı da yapay zeka tarafından gerçekleştirilmektedir.\nElde edilen son bulgular karar verme ve çözümü gerçekleştirme adımlarında, bulguları 4 başlık içerisinde incelemekteyiz,\n1) Yorumlanabilirlik\n2) Yönlendirebilme\n3) Gürbüzlük\n4) Karara çevirebilme\nDüz kereste projesinde, sonuç çıktıları; resimler ve yapay zeka yorumları, görselleştirilerek üretici firmaya sunulmuştur. Bu sunulan veriler sayesinde üretici firma tecrübe ve bilgisini, bulguları görsel olarak inceleyerek aktarabilmiş; üretilen matematiksel aracın güvenilirliğine ve kullanılabilirliğine karar vermiştir. Firma yine bu matematiksel aracı kullanarak üretilen keresteleri, araç tarafından belirlenen noktalardan sabitleyerek, üretim verimini arttırmaya karar vermiştir. Anlatıda bu projede geliştirilen aracın gürbüzlüğü gizli olup; gürbüzlük ile ilgili ayrı bir hava durumu tahmini örneği verilmiştir. Hava durumunun tahminde belirtilene ek olarak bu tahminin hatalı çıkma ihtimaline karşı vatandaşların önlemler alması gürbüzlüğe bir örnektir. Düz kereste projesinde de, örneğin, geliştirilen aracın farklı çeşit ağaçlardan gelen kereste verilerini yorumlarken doğru çıktıları verebilmesi bir gürbüzlük örneğidir.\nGeleneksel öğrenme ve derin öğrenme süreçleri karşılaştırıldığında geleneksel öğrenmede öznitelik çıkarımları yapılırken ciddi çalışmalar yapılıp, veriler toplanıp işlenirken, derin öğrenme sürecinde öznitelik çıkarımı ve öğrenme kısmı kendi içinde dahil olduğu için geleneksel öğrenmede bu tarafta daha fazla efor harcanıyor. Kıyaslamaya bakıldığında yapısal olmayan verilerde derin öğrenme daha iyi çalışmakta. Ancak yorumlanabilirliği daha düşük. Aynı zamanda robust açısından değerlendirildiğinde kullanılan tahmin yöntemi sonucunda bir tahminin yanlış olması durumunda sistemin etkilenme oranı derin öğrenmede daha fazla.\nTahmin yöntemlerinin kullanılmasının en önemli sebebi karar vermede bu yöntemlerin etkili olması. Tahmin doğruluğunun önemi çeşitli örnekler verilerek anlatılmakta. Elektrik piyasasındaki örnekte olduğu gibi saatlik elektrik üretim ve tüketim miktarlarındaki yanlış tahminler yıllık bakıldığında şirketler için ciddi miktarda maddi kayıplara sebep olmakta. Çeşitli özelleşmiş öznitelik çıkarımları ve makine öğrenimi kullanarak oluşturulan modeller ile bu kayıplar da aynı zamanda ciddi oranda azaltılabilir. Bu modeller oluşturulurken doğru verilen toplanması ve özel durumlarda bu verilerin sürekli olmayabileceğinin de göz önünde bulundurulması gerekiyor.\nOnline satış sitelerinde verilen örnekte ise sıralama önceliklerine ve cironun artırılması için alternatif yaklaşımlara değinilmekte. Satış/Stok dengesi ve popülerlik gibi görece basit yöntemlerle insanların önüne çıkan ürünler şirketlerin kazancını artırabilir. Makine öğrenimi kullanımında ise benzetme, tercih öğrenme ve tahmini satış gibi yaklaşımlar bulunmakta. Bu yaklaşımlar satış oranıyla çift yönlü bir etkileşimde olduğu için taraflı veri (bias) olarak değerlendirilir. Pekiştirmeli öğrenme yönteminde ise akıllı deneme yanılma yaklaşımı kullanılabilir. Bir A algoritmasını denemek isteyelim. Bu algoritmayı 1-2 saatliğine sitede çalıştırırken arka tarafta ise halihazırda güvenilen B algoritması çalıştırılarak A algoritmasının satışa etkisi denenebilir. Burada geçmişte öğrenilen bilgilerle makine öğreniminde kullanılan satranç oynayan makineler örneği de veriliyor. Basit sıralama politikasında da ürünlerin kullanıcı için bir dinamik skoru bulunuyor. Bu yöntemde çok fazla bakılan ürünler taraflılıktan kurtulmak açısından bir katsayıyla cezalandırılıyor.\nSonraki örnekte ise tahmin yöntemleri kullanılırken belirli fiziksel yasaların da bu tahmin algoritmalarında etkin şekilde kullanılmasının öneminden bahsediliyor. Örneğin bir hava durumu tahmini yapılacaksa kütlenin korunumu gibi bir fiziksel yasa kullanılmadan tahmin yapılması çok mantıklı olmayacak. Bu şekilde fizik kurallarının da algoritmalara eklenmesiyle beraber tahminlerin doğruluğu artırılabilir.\nOptimizasyon yöntemlerinin kullanımında örneğin envanter yönetimi gibi süreçlerde, talep tahmini ve lojistik planlama gibi konuların nasıl matematiksel modeller ve optimizasyon yöntemleri kullanılarak çözülebileceğine dair açıklamalar bulunulmuştur. Aynı zamanda belirli bir zaman diliminde belirli miktarlarda ürünün belirli noktalara ulaştırılması gibi karmaşık kararlar almak için bu tür yöntemlerin nasıl uygulanabileceği üzerinde durulmuştur. Makine öğrenimi ile optimizasyonun birleştirilmesi için geçmişte çözülmüş optimizasyon problemlerinden elde edilen verilerin, makine öğrenimi algoritmalarıyla analiz edilerek gelecekteki optimizasyon problemlerine nasıl uygulanabileceği tartışılmıştır. Makine öğrenimi ve optimizasyonun birleştirilmesinin, karmaşık karar verme süreçlerini otomatikleştirmek ve iyileştirmek için nasıl kullanılabileceği konusunda daha fazla araştırma ve geliştirme yapılması gerektiği üzerinde durulmuştur.\nVideonun son bölümünde gelen sorulara göre bazı konular üzerinde durulmuştur. Veri analizi becerilerini geliştirmek için lisans eğitimi sırasında gerçek dünya problemleri üzerinde çalışmak oldukça değerlidir. Öğrenciler, endüstriyel projeler veya akademik araştırmalar kapsamında veri toplayıp, temizleyip, analiz edip ve yorumlayabileceğine değinilmiştir. Ayrıca cesaretli davranmak, kendi ilgi alanlarına odaklanmak ve bu alanda uygulama yapmak önemlidir. Farklı veri analizi tekniklerini denemek ve çeşitli veri setleri üzerinde çalışmak geniş bir perspektif kazandırabilir. Kaggle gibi platformlarda düzenlenen veri analizi yarışmalarına katılmak, öğrencilere gerçek dünya veri setleriyle çalışma ve problem çözme becerilerini geliştirme fırsatı sunmaktadır.\nComputer vision alanında çalışmak isteyen öğrenciler, görüntü işleme ve derin öğrenme teknikleri üzerine odaklanabileceği söylenmiştir. PyTorch gibi derin öğrenme kütüphanelerini kullanarak yapay sinir ağı modelleri oluşturmak ve eğitmek, öğrencilere derin öğrenme konusunda pratik deneyim kazandırabileceği konuşulmuştur."
  },
  {
    "objectID": "proje.html#türkiyede-benzin-dizel-lpg-ve-diğer-yakıt-türlerine-göre-taşıt-dağılımı",
    "href": "proje.html#türkiyede-benzin-dizel-lpg-ve-diğer-yakıt-türlerine-göre-taşıt-dağılımı",
    "title": "Türkiye’de Taşıt Sahipliği ve Kullanımı: Veriler ve Eğilimler",
    "section": "3.6 Türkiye’de Benzin, Dizel, LPG ve Diğer Yakıt Türlerine Göre Taşıt Dağılımı",
    "text": "3.6 Türkiye’de Benzin, Dizel, LPG ve Diğer Yakıt Türlerine Göre Taşıt Dağılımı\nTürkiye’deki taşıt sahipliği ve kullanımı, ülkenin ekonomik ve sosyal dinamiklerini gösteren önemli bir gösterge olarak öne çıkıyor. Bu alandaki analizler, taşıtların farklı yakıt türlerine göre dağılımını ve taşıt tercihlerinin nasıl değiştiğini anlamamıza yardımcı oluyor. Bu çalışmanın amacı, Türkiye’deki benzin, dizel, LPG ve diğer yakıt türlerini kullanan araç sayılarını incelemek ve ülkenin taşıt portföyündeki eğilimleri ve değişiklikleri belirlemektir. Bu analiz, taşıt endüstrisindeki değişiklikleri anlamak ve gelecekteki taşıt tercihlerini tahmin etmek için önemli bir bakış sunuyor.\nlibrary(readxl)\n\n# Excel dosyasını oku\ndata &lt;- read_excel(\"../muy665-bahar2024-takim-ancuez/dataset/yakit.xlsx\")\n\n# Sütunlardaki verileri temizle ve nümerik hale getir\nclean_numeric &lt;- function(column) {\n    column &lt;- gsub(\" \", \"\", column)  # Boşlukları kaldır\n    column &lt;- gsub(\",\", \"\", column)  # Virgülleri kaldır\n    as.numeric(column)  # Nümerik hale getir\n}\n\n# Sütunları temizleyip nümerik hale getirme\ndata$Benzin &lt;- clean_numeric(data$Benzin)\ndata$Dizel &lt;- clean_numeric(data$Dizel)\ndata$LPG &lt;- clean_numeric(data$LPG)\ndata$Hibrit &lt;- clean_numeric(data$Hibrit)\ndata$Elektrik &lt;- clean_numeric(data$Elektrik)\ndata$Bilinmeyen &lt;- clean_numeric(data$Bilinmeyen)\n\n# Grafik için verileri hazırla\nx &lt;- data$Yil\ny1 &lt;- data$Benzin\ny2 &lt;- data$Dizel\ny3 &lt;- data$LPG\ny4 &lt;- data$Hibrit\ny5 &lt;- data$Elektrik\ny6 &lt;- data$Bilinmeyen\n\n# En yüksek değeri hesapla\nmax_y &lt;- max(c(y1, y2, y3, y4, y5, y6), na.rm = TRUE) * 1.1\n\n# Y ekseni aralıklarını hesapla\ny_ticks &lt;- pretty(c(0, max_y))\n\n# Bilimsel gösterim yerine normal sayılar kullanmak için formatlama\ny_labels &lt;- format(y_ticks, scientific = FALSE)\n\n# Grafiği çiz\nplot(x, y1, type = \"l\", col = \"blue\", lwd = 3, ylim = c(0, max_y), xlab = \"Yıl\", ylab = \"Araç   Sayısı\", main = \"Trafige Kayıtlı Otomobillerin Yakıt Cinsi Tabanlı Dağılımı\", yaxt = \"n\")\nlines(x, y2, col = \"red\", lwd = 3)\nlines(x, y3, col = \"green\", lwd = 3)\nlines(x, y4, col = \"purple\", lwd = 3)\nlines(x, y5, col = \"orange\", lwd = 3)\nlines(x, y6, col = \"gray\", lwd = 3)\n\n# Y ekseni aralıklarını ekle\naxis(2, at = y_ticks, labels = y_labels)\n\n# Legend ekle\nlegend(\"topright\", legend = c(\"Benzin\", \"Dizel\", \"LPG\", \"Hibrit\", \"Elektrik\", \"Bilinmeyen\"), col = c(\"blue\", \"red\", \"green\", \"purple\", \"orange\", \"gray\"), lty = 1, lwd = 2, cex = 0.8)"
  },
  {
    "objectID": "proje.html#elektrikli-taşıtlar-türkiyede-2034e-kadar-beklenen-dönüşüm",
    "href": "proje.html#elektrikli-taşıtlar-türkiyede-2034e-kadar-beklenen-dönüşüm",
    "title": "Türkiye’de Taşıt Sahipliği ve Kullanımı: Veriler ve Eğilimler",
    "section": "4.3 Elektrikli Taşıtlar: Türkiye’de 2034’e Kadar Beklenen Dönüşüm",
    "text": "4.3 Elektrikli Taşıtlar: Türkiye’de 2034’e Kadar Beklenen Dönüşüm\nTürkiye’de elektrikli taşıtların 2034’e kadar beklenen dönüşümü, önemli bir değişimin habercisi olmuştur. Bu süreçte, çevresel endişelerin artması ve teknolojik gelişmelerin ivme kazanmasıyla elektrikli araçlar ön plana çıkabilir. Bu grafik, Türkiye’deki elektrikli araç endüstrisi için geleceğe yönelik önemli bir bakış sunabilir.\nlibrary(readxl)\nlibrary(forecast)\nlibrary(tseries)\n\n# Excel dosyasını oku\ndata &lt;- read_excel(\"../muy665-bahar2024-takim-ancuez/dataset/yakit.xlsx\")\n\n# Sütunlardaki verileri temizle ve nümerik hale getir\nclean_numeric &lt;- function(column) {\n  column &lt;- gsub(\" \", \"\", column)  # Boşlukları kaldır\n  column &lt;- gsub(\",\", \"\", column)  # Virgülleri kaldır\n  as.numeric(column)  # Nümerik hale getir\n}\n\n# Sütunları temizleyip nümerik hale getirme\ndata$Benzin &lt;- clean_numeric(data$Benzin)\ndata$Dizel &lt;- clean_numeric(data$Dizel)\ndata$LPG &lt;- clean_numeric(data$LPG)\ndata$Hibrit &lt;- clean_numeric(data$Hibrit)\ndata$Elektrik &lt;- clean_numeric(data$Elektrik)\ndata$Bilinmeyen &lt;- clean_numeric(data$Bilinmeyen)\n\n# Elektrikli araçlar verisini al\nelektrik &lt;- data$Elektrik\n\n# NA değerlerini kontrol et ve eksik değerleri doldur\nif (anyNA(elektrik)) {\n  mean_val &lt;- mean(elektrik, na.rm = TRUE)\n  elektrik[is.na(elektrik)] &lt;- mean_val\n  cat(\"Eksik değerler ortalama ile dolduruldu. Ortalama değer:\", mean_val, \"\\n\")\n}\n\n# Zaman serisi verisi oluştur\nelektrik_ts &lt;- ts(elektrik, start = min(data$Yil), end = max(data$Yil), frequency = 1)\n\n# ARIMA modeli oluştur\nfit &lt;- arima(elektrik_ts, order = c(2,1,1))\n\n# Gelecek 10 yıl için tahmin yap\nforecasts &lt;- forecast(fit, h = 10)\n\n# Tahmin sonuçlarını tablo halinde göster\nprediction_results &lt;- data.frame(Yil = seq(max(data$Yil) + 1, max(data$Yil) + 10), Tahmini_Elektrik_Arac_Sayisi = as.numeric(forecasts$mean))\nprint(prediction_results)\n\n# Mevcut ve tahmini değerleri birlikte çiz\nplot(forecasts, xlim = c(min(data$Yil), max(data$Yil) + 10), xlab = \"Yıl\", ylab = \"Elektrikli Araç   Sayısı\", main = \"Elektrikli Araç   Sayısı Tahmini (ARIMA)\", col = \"blue\")\nlines(elektrik_ts, col = \"red\", lwd = 2)\n\n# Y ekseninin bilimsel gösterimini devre dışı bırak\noptions(scipen = 10)\n\n# Y eksenini ekle\naxis(2, ylim = c(0, max(max(elektrik_ts), max(forecasts$mean)) * 1.1))\n\n# Legend ekle\nlegend(\"topleft\", legend = c(\"Gerçek Degerler\", \"Tahminler\"), col = c(\"red\", \"blue\"), lty = 1, lwd = 2, cex = 0.8)"
  },
  {
    "objectID": "proje.html#yılında-türkiyede-illere-ve-bölgelere-göre-kara-taşıtlarının-dağılımları",
    "href": "proje.html#yılında-türkiyede-illere-ve-bölgelere-göre-kara-taşıtlarının-dağılımları",
    "title": "Türkiye’de Taşıt Sahipliği ve Kullanımı: Veriler ve Eğilimler",
    "section": "3.3 2024 Yılında Türkiye’de İllere ve Bölgelere Göre Kara Taşıtlarının Dağılımları",
    "text": "3.3 2024 Yılında Türkiye’de İllere ve Bölgelere Göre Kara Taşıtlarının Dağılımları\nTürkiye’de kara taşıtı araçlarının sayısının bölgelere göre dağılımını da incelemek istedik. Aslında beklenen sonuçlara proje başında geneel bir bakış sunarak, illere göre dağılım analizlerini yapacağımızda bize bir temel oluşturuyor. Nüfusla bağlantılı olarak Marmara Bölgesi’nde büyük bir pay bekleniyordu. Ancak Türkiye’de yaklaşık her 3 kara taşıtından birinin Marmara Bölgesi’nde olması ilginç bir sonuç olarak karşımıza çıkıyor. Çalışmamızın devamında illerdeki kişi başına düşen araç sayısına bakacağımızda sonucun nasıl olacağını birlikte göreceğiz.\n\nlibrary(readr)\nlibrary(readxl)\nlibrary(dslabs)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ purrr     1.0.2\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.0     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(dplyr)\nlibrary(ggthemes)\n\n#Excel dosyasını oku\nveri &lt;- read_excel(\"/Users/ozgurkaya/Documents/GitHub/muy665-bahar2024-takim-ancuez/dataset/illere göre araç sayısı.xls\")\n\n#İlleri bölgelere göre ayırma\nbolgeler &lt;- list(\n  \"Marmara\" = c(\"İstanbul\", \"Kırklareli\", \"Bursa\", \"Edirne\", \"Kocaeli\", \"Sakarya\", \"Tekirdağ\", \"Balıkesir\", \"Çanakkale\", \"Yalova\", \"Bilecik\"),\n  \"Ege\" = c(\"İzmir\", \"Aydın\", \"Muğla\", \"Manisa\", \"Denizli\", \"Afyonkarahisar\", \"Kütahya\", \"Uşak\"),\n  \"Akdeniz\" = c(\"Antalya\", \"Mersin\", \"Adana\", \"Isparta\", \"Burdur\", \"Hatay\", \"Osmaniye\", \"Kahramanmaraş\"),\n  \"İçAnadolu\" = c(\"Ankara\", \"Konya\", \"Eskişehir\", \"Kayseri\", \"Sivas\", \"Yozgat\", \"Kırıkkale\", \"Kırşehir\", \"Niğde\", \"Aksaray\", \"Karaman\", \"Nevşehir\", \"Çankırı\"),\n  \"Karadeniz\" = c(\"Trabzon\", \"Bayburt\", \"Samsun\", \"Ordu\", \"Gümüşhane\", \"Giresun\", \"Rize\", \"Artvin\", \"Sinop\", \"Kastamonu\", \"Çorum\", \"Amasya\", \"Tokat\", \"Zonguldak\", \"Bartın\", \"Karabük\", \"Bolu\", \"Düzce\"),\n  \"DoğuAnadolu\" = c(\"Malatya\", \"Elazığ\", \"Erzincan\", \"Erzurum\", \"Van\", \"Ağrı\", \"Muş\", \"Bingöl\", \"Bitlis\", \"Tunceli\", \"Hakkari\", \"Iğdır\", \"Kars\", \"Ardahan\"),\n  \"GüneydoğuAnadolu\" = c(\"Gaziantep\", \"Diyarbakır\", \"Şanlıurfa\", \"Mardin\", \"Batman\", \"Şırnak\", \"Siirt\", \"Adıyaman\", \"Kilis\")\n)\n\n# Her bölgedeki illeri filtreleyip değişkenlere atama\nmarmara &lt;- veri %&gt;% filter(İl %in% bolgeler$Marmara)\nege &lt;- veri %&gt;% filter(İl %in% bolgeler$Ege)\nakdeniz &lt;- veri %&gt;% filter(İl %in% bolgeler$Akdeniz)\nic_anadolu &lt;- veri %&gt;% filter(İl %in% bolgeler$İçAnadolu)\nkaradeniz &lt;- veri %&gt;% filter(İl %in% bolgeler$Karadeniz)\ndogu_anadolu &lt;- veri %&gt;% filter(İl %in% bolgeler$DoğuAnadolu)\nguneydogu_anadolu &lt;- veri %&gt;% filter(İl %in% bolgeler$GüneydoğuAnadolu) \n\n# Bölgelere göre toplam araç sayılarını hesaplama\nbolge_toplamlari &lt;- veri %&gt;%\n  mutate(Bolge = case_when(\n    İl %in% bolgeler$Marmara ~ \"Marmara\",\n    İl %in% bolgeler$Ege ~ \"Ege\",\n    İl %in% bolgeler$Akdeniz ~ \"Akdeniz\",\n    İl %in% bolgeler$`İçAnadolu` ~ \"İç Anadolu\",\n    İl %in% bolgeler$Karadeniz ~ \"Karadeniz\",\n    İl %in% bolgeler$`DoğuAnadolu` ~ \"Doğu Anadolu\",\n    İl %in% bolgeler$`GüneydoğuAnadolu` ~ \"Güneydoğu Anadolu\",\n    TRUE ~ \"Diğer\"\n  )) %&gt;%\n  group_by(Bolge) %&gt;%\n  summarise(Total_Arac_Sayisi = sum(Toplam, na.rm = TRUE))\n\n# Yüzdeleri hesaplama\nbolge_toplamlari &lt;- bolge_toplamlari %&gt;%\n  mutate(Yuzde = Total_Arac_Sayisi / sum(Total_Arac_Sayisi) * 100)\n\n# Bölgelere Göre Toplam Araç Sayılarının Pasta Grafiğini Oluşturma\nggplot(bolge_toplamlari, aes(x = \"\", y = Yuzde, fill = Bolge)) +\n  geom_bar(width = 1, stat = \"identity\") +\n  coord_polar(\"y\") +\n  labs(title = \"Bölgelere Göre Toplam Araç Sayılarının Yüzdeleri\", x=NULL, y=NULL) +\n  theme_minimal() +\n  theme(axis.text.x = element_blank()) +\n  geom_text(aes(label = paste0(round(Yuzde, 1), \"%\")), position = position_stack(vjust = 0.5))"
  },
  {
    "objectID": "proje.html#yılında-türkiyede-bölgelere-göre-kara-taşıtlarının-sayısının-dağılımları",
    "href": "proje.html#yılında-türkiyede-bölgelere-göre-kara-taşıtlarının-sayısının-dağılımları",
    "title": "Türkiye’de Taşıt Sahipliği ve Kullanımı: Veriler ve Eğilimler",
    "section": "3.3 2024 Yılında Türkiye’de Bölgelere Göre Kara Taşıtlarının Sayısının Dağılımları",
    "text": "3.3 2024 Yılında Türkiye’de Bölgelere Göre Kara Taşıtlarının Sayısının Dağılımları\nTürkiye’de kara taşıtı araçlarının sayısının bölgelere göre dağılımını da incelemek istedik. Aslında beklenen sonuçlara proje başında geneel bir bakış sunarak, illere göre dağılım analizlerini yapacağımızda bize bir temel oluşturuyor. Nüfusla bağlantılı olarak Marmara Bölgesi’nde büyük bir pay bekleniyordu. Ancak Türkiye’de yaklaşık her 3 kara taşıtından birinin Marmara Bölgesi’nde olması ilginç bir sonuç olarak karşımıza çıkıyor. Çalışmamızın devamında illerdeki kişi başına düşen araç sayısına bakacağımızda sonucun nasıl olacağını birlikte göreceğiz.\n\nlibrary(readr)\nlibrary(readxl)\nlibrary(dslabs)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ purrr     1.0.2\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(dplyr)\nlibrary(ggthemes)\n\n#Excel dosyasını oku\nveri &lt;- read_excel(\"../muy665-bahar2024-takim-ancuez/dataset/illere göre araç sayısı.xls\")\n\n#İlleri bölgelere göre ayırma\nbolgeler &lt;- list(\n  \"Marmara\" = c(\"İstanbul\", \"Kırklareli\", \"Bursa\", \"Edirne\", \"Kocaeli\", \"Sakarya\", \"Tekirdağ\", \"Balıkesir\", \"Çanakkale\", \"Yalova\", \"Bilecik\"),\n  \"Ege\" = c(\"İzmir\", \"Aydın\", \"Muğla\", \"Manisa\", \"Denizli\", \"Afyonkarahisar\", \"Kütahya\", \"Uşak\"),\n  \"Akdeniz\" = c(\"Antalya\", \"Mersin\", \"Adana\", \"Isparta\", \"Burdur\", \"Hatay\", \"Osmaniye\", \"Kahramanmaraş\"),\n  \"İçAnadolu\" = c(\"Ankara\", \"Konya\", \"Eskişehir\", \"Kayseri\", \"Sivas\", \"Yozgat\", \"Kırıkkale\", \"Kırşehir\", \"Niğde\", \"Aksaray\", \"Karaman\", \"Nevşehir\", \"Çankırı\"),\n  \"Karadeniz\" = c(\"Trabzon\", \"Bayburt\", \"Samsun\", \"Ordu\", \"Gümüşhane\", \"Giresun\", \"Rize\", \"Artvin\", \"Sinop\", \"Kastamonu\", \"Çorum\", \"Amasya\", \"Tokat\", \"Zonguldak\", \"Bartın\", \"Karabük\", \"Bolu\", \"Düzce\"),\n  \"DoğuAnadolu\" = c(\"Malatya\", \"Elazığ\", \"Erzincan\", \"Erzurum\", \"Van\", \"Ağrı\", \"Muş\", \"Bingöl\", \"Bitlis\", \"Tunceli\", \"Hakkari\", \"Iğdır\", \"Kars\", \"Ardahan\"),\n  \"GüneydoğuAnadolu\" = c(\"Gaziantep\", \"Diyarbakır\", \"Şanlıurfa\", \"Mardin\", \"Batman\", \"Şırnak\", \"Siirt\", \"Adıyaman\", \"Kilis\")\n)\n\n# Her bölgedeki illeri filtreleyip değişkenlere atama\nmarmara &lt;- veri %&gt;% filter(İl %in% bolgeler$Marmara)\nege &lt;- veri %&gt;% filter(İl %in% bolgeler$Ege)\nakdeniz &lt;- veri %&gt;% filter(İl %in% bolgeler$Akdeniz)\nic_anadolu &lt;- veri %&gt;% filter(İl %in% bolgeler$İçAnadolu)\nkaradeniz &lt;- veri %&gt;% filter(İl %in% bolgeler$Karadeniz)\ndogu_anadolu &lt;- veri %&gt;% filter(İl %in% bolgeler$DoğuAnadolu)\nguneydogu_anadolu &lt;- veri %&gt;% filter(İl %in% bolgeler$GüneydoğuAnadolu) \n\n# Bölgelere göre toplam araç sayılarını hesaplama\nbolge_toplamlari &lt;- veri %&gt;%\n  mutate(Bolge = case_when(\n    İl %in% bolgeler$Marmara ~ \"Marmara\",\n    İl %in% bolgeler$Ege ~ \"Ege\",\n    İl %in% bolgeler$Akdeniz ~ \"Akdeniz\",\n    İl %in% bolgeler$`İçAnadolu` ~ \"İç Anadolu\",\n    İl %in% bolgeler$Karadeniz ~ \"Karadeniz\",\n    İl %in% bolgeler$`DoğuAnadolu` ~ \"Doğu Anadolu\",\n    İl %in% bolgeler$`GüneydoğuAnadolu` ~ \"Güneydoğu Anadolu\",\n    TRUE ~ \"Diğer\"\n  )) %&gt;%\n  group_by(Bolge) %&gt;%\n  summarise(Total_Arac_Sayisi = sum(Toplam, na.rm = TRUE))\n\n# Yüzdeleri hesaplama\nbolge_toplamlari &lt;- bolge_toplamlari %&gt;%\n  mutate(Yuzde = Total_Arac_Sayisi / sum(Total_Arac_Sayisi) * 100)\n\n# Bölgelere Göre Toplam Araç Sayılarının Pasta Grafiğini Oluşturma\nggplot(bolge_toplamlari, aes(x = \"\", y = Yuzde, fill = Bolge)) +\n  geom_bar(width = 1, stat = \"identity\") +\n  coord_polar(\"y\") +\n  labs(title = \"Bölgelere Göre Toplam Araç Sayılarının Yüzdeleri\", x=NULL, y=NULL) +\n  theme_minimal() +\n  theme(axis.text.x = element_blank()) +\n  geom_text(aes(label = paste0(round(Yuzde, 1), \"%\")), position = position_stack(vjust = 0.5))"
  },
  {
    "objectID": "proje.html#yılında-türkiyede-illere-göre-kara-taşıtlarının-dağılımları",
    "href": "proje.html#yılında-türkiyede-illere-göre-kara-taşıtlarının-dağılımları",
    "title": "Türkiye’de Taşıt Sahipliği ve Kullanımı: Veriler ve Eğilimler",
    "section": "3.4 2024 Yılında Türkiye’de İllere Göre Kara Taşıtlarının Dağılımları",
    "text": "3.4 2024 Yılında Türkiye’de İllere Göre Kara Taşıtlarının Dağılımları\nBu kısımda öncelikle illere göre toplam kara taşıtı sayılarını inceledik. Beklendiği üzere araç sayılarının en fazla olduğu iller büyükşehirler oldu. Bu da aslında gelişmişlikle ve ekonomik durumla tam ilişkilendirilemedi çünkü büyükşehirlerin nüfusu daha fazla. En fazla araç sayısına sahip 10 il grafikte gösterildi.\n\nlibrary(readxl)\nlibrary(dslabs)\nlibrary(tidyverse)\nlibrary(dplyr)\nlibrary(ggthemes)\n\n#Excel dosyasını oku\nveri &lt;- read_excel(\"../muy665-bahar2024-takim-ancuez/dataset/illere göre araç sayısı.xls\")\n\n# \"Toplam\" verisini çıkarın\nveri_filtreli &lt;- veri %&gt;% filter(İl != \"Toplam\")\n\n# Toplam araç sayısına göre veriyi azalan sırada sıralayın\nveri_sirali &lt;- veri_filtreli %&gt;% arrange(desc(Toplam))\n# Toplam araç sayısı en yüksek olan 10 ili seçin\nen_yuksek_arac &lt;- veri_sirali %&gt;% top_n(10, Toplam)\n\n# Toplam araç sayısının en yüksek olduğu 10 ilin grafiğini çizdirin\nggplot(en_yuksek_arac, aes(x = reorder(İl, Toplam), y = Toplam)) +\n  geom_bar(stat = \"identity\", fill = \"navy\") +\n  geom_text(aes(label = Toplam), vjust = -0.5, color = \"black\") +\n  labs(title = \"Toplam Araç Sayısının En Yüksek Olduğu 10 İl\",\n       x = NULL,\n       y = NULL) +\n  theme_fivethirtyeight() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))"
  },
  {
    "objectID": "proje.html#yılında-türkiyede-illere-göre-kişi-başına-düşen-kara-taşıtı-sayısı",
    "href": "proje.html#yılında-türkiyede-illere-göre-kişi-başına-düşen-kara-taşıtı-sayısı",
    "title": "Türkiye’de Taşıt Sahipliği ve Kullanımı: Veriler ve Eğilimler",
    "section": "3.5 2024 Yılında Türkiye’de İllere Göre Kişi Başına Düşen Kara Taşıtı Sayısı",
    "text": "3.5 2024 Yılında Türkiye’de İllere Göre Kişi Başına Düşen Kara Taşıtı Sayısı\nBu bölümde ise kişi başına düşen araç sayısının en yüksek olduğu illeri inceledik. Araç sayısının en yüksek olduğu iller olan İstanbul, Ankara ve İzmir kişi başına düşen araç sayısının en yüksek olduğu iller arasında yer almadı. Muğla, Antalya, Çanakkale, Aydın gibi tatil yöreleri listenin zirvesinde yer aldı. Bu durumu da bu gibi tatil bölgelerinde yaşayan insanların ekonomik durumlarının daha iyi olabiliceğiyle ilişkilendirdik. Maddi durumları iyi, emekli olmuş ve genelde her ailede araç sayısının 1’den fazla olduğu insanların bu bölgede yaşadığının bilinmesi de bu ilişkilendirmenin temelini oluşturdu.\n\nlibrary(readr)\nlibrary(readxl)\nlibrary(dslabs)\nlibrary(tidyverse)\nlibrary(dplyr)\nlibrary(ggthemes)\n\n#Excel dosyasını okuma\nveri &lt;- read_excel(\"../muy665-bahar2024-takim-ancuez/dataset/illere göre araç sayısı.xls\")\n\nveri_filtreli &lt;- veri %&gt;% filter(İl != \"Toplam\")\n\n# Nüfus ve toplam araç sayısı sütunlarını sayısal tipe dönüştürün\nveri_filtreli$Toplam &lt;- as.numeric(gsub(\"[^0-9]\", \"\", veri_filtreli$Toplam))\nveri_filtreli$Nüfus &lt;- as.numeric(gsub(\"[^0-9]\", \"\", veri_filtreli$Nüfus))\n\n# Herhangi bir dönüştürme hatasını kontrol edin (örneğin, NA değerler)\nsummary(veri_filtreli$Nüfus)\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n   85012   296333   557605  1055776  1116618 15891924 \n\nsummary(veri_filtreli$Toplam)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   9584   74260  152872  357430  325882 5455930 \n\n# Kişi başına düşen araç sayısını hesaplayın\nkisi_basina_dusen_arac &lt;- veri_filtreli$Toplam / veri_filtreli$Nüfus\n\n# Veriye kişi başına düşen araç sayısını ekleyin\nveri_filtreli &lt;- veri_filtreli %&gt;%\n  mutate(Kisi_Basina_Arac_Sayisi = kisi_basina_dusen_arac)\n\n# Kişi başına düşen araç sayısına göre veriyi azalan sırada sıralayın\nveri_sirali &lt;- veri_filtreli %&gt;% arrange(desc(Kisi_Basina_Arac_Sayisi))\n\n# Kişi başına düşen araç sayısı en yüksek olan 10 ili seçin\nen_yuksek_kisi_basi_arac &lt;- head(veri_sirali, 10)\n\n# Kişi başına düşen araç sayısının en yüksek olduğu 10 ilin grafiğini çizdirin\nggplot(en_yuksek_kisi_basi_arac, aes(x = reorder(İl, Kisi_Basina_Arac_Sayisi), y = Kisi_Basina_Arac_Sayisi)) +\n  geom_bar(stat = \"identity\", fill = \"navy\") +\n  geom_text(aes(label = round(Kisi_Basina_Arac_Sayisi, 2)), vjust = 0, hjust = 0.5, color = \"black\") +\n  labs(title = \"Kişi Başına Düşen Araç Sayısı\",\n       x = NULL,\n       y = \"Kişi Başına Düşen Araç Sayısı\", hjust=1) +\n  theme_fivethirtyeight() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))"
  },
  {
    "objectID": "proje.html#mevcut-toplam-araç-sayısı-ve-gelecek-yıllar-için-tahmin",
    "href": "proje.html#mevcut-toplam-araç-sayısı-ve-gelecek-yıllar-için-tahmin",
    "title": "Türkiye’de Taşıt Sahipliği ve Kullanımı: Veriler ve Eğilimler",
    "section": "4.1 Mevcut Toplam Araç Sayısı ve Gelecek Yıllar için Tahmin",
    "text": "4.1 Mevcut Toplam Araç Sayısı ve Gelecek Yıllar için Tahmin\nyillik_arac_sayisi_2023 &lt;-\n  read.csv2(\"C:/Users/msaid/Desktop/yillik_arac_sayisi_2023.csv\",\n            header = TRUE)\nhead(yillik_arac_sayisi_2023)\nmodel &lt;- lm(Toplam ~ Yil, data = yillik_arac_sayisi_2023)\nsummary(model)\nnew_years &lt;-\n  data.frame(Yil = seq(2024, 2030, by = 1))  # 2024'ten 2030'a kadar yıllar\npredictions &lt;- predict(model, new_years)\ncat(\"Gelecek yillar icin tahmin edilen toplam arac sayisi:\\n\")\nprint(predictions)\npredicted_data &lt;-\n  data.frame(Yil = new_years$Yil, Toplam = predictions)\nyeni_veri &lt;- yillik_arac_sayisi_2023 %&gt;% select(Yil, Toplam)\ncombined_data &lt;- rbind(yeni_veri, predicted_data)\nggplot(combined_data, aes(x = Yil, y = Toplam)) +\n  geom_line() +\n  geom_point(color = \"red\") +\n  geom_text(aes(label = scales::number(\n    Toplam,\n    scale = 1e-6,\n    suffix = \"M\",\n    accuracy = 0.1\n  )),\n  vjust = -1,\n  size = 2.25) +\n  labs(title = \"Mevcut Toplam Arac Sayisi ve Gelecek Yillar Icin Tahmin\",\n       x = \"Yil\",\n       y = \"Toplam Arac Sayisi\") +\n  scale_x_continuous(breaks = seq(min(combined_data$Yil), max(combined_data$Yil), by = 3)) +\n  scale_y_continuous(\n    labels = scales::label_number(scale = 1e-6, suffix = \"M\"),\n    breaks = seq(0, max(combined_data$Toplam), by = 2e6)\n  ) +\n  theme_minimal()\n\nYukarıdaki grafikte 2002-2023 yılları arasındaki kayıtlı motorlu araç sayısı veri setinden yola çıkılarak, 2030 yılına kadar olması beklenen (tahmin edilen) toplam kayıtlı motorlu araç sayısı değişimini resmetmektedir.\nBurada tahmin göründüğü üzere modelimize göre 2024 yılında toplam kayıtlı motorlu araç sayısı düşmüş olarak görülmektedir. Bunun da nedeni modelimizde fazla değişken olmamasına istinaden verimli bir tahmin modeli oluşturulamamasındandır."
  },
  {
    "objectID": "proje.html#değere-karşı-yıl-tahmini",
    "href": "proje.html#değere-karşı-yıl-tahmini",
    "title": "Türkiye’de Taşıt Sahipliği ve Kullanımı: Veriler ve Eğilimler",
    "section": "4.2 Değere Karşı Yıl Tahmini",
    "text": "4.2 Değere Karşı Yıl Tahmini\ninstall.packages(\"tidyverse\")\nlibrary(tidyverse)\nyillik_arac_sayisi_2023 &lt;-\n  read.csv2(\"C:/Users/msaid/Desktop/yillik_arac_sayisi_2023.csv\",\n            header = TRUE)\nhead(yillik_arac_sayisi_2023)\nyillik_arac_sayisi_2024_regresyon &lt;-\n  lm(Yil ~ Toplam, data = yillik_arac_sayisi_2023)\nsummary(yillik_arac_sayisi_2024_regresyon)\nyeni_data &lt;- data.frame(Toplam = 40000000)\nprediction &lt;- predict(yillik_arac_sayisi_2024_regresyon, yeni_data)\ncat(\"Kayıtlı araç sayısının 40000000' u göreceği tahmini yıl:\",\n    prediction,\n    \"\\n\")\nyeni_veri &lt;- yillik_arac\n_sayisi_2023 %&gt;% select(Yil, Toplam)\ntahmin_verisi &lt;- data.frame(Yil = prediction,\n                            Toplam = 40000000)\ntum_veri &lt;- rbind(yeni_veri, tahmin_verisi)\nggplot(tum_veri, aes(x = Yil, y = Toplam)) +\n  geom_line() +\n  geom_point(color = \"red\") +\n  geom_text(aes(label = scales::number(\n    Toplam,\n    scale = 1e-6,\n    suffix = \"M\",\n    accuracy = 0.1\n  )),\n  vjust = -2.25,\n  size = 2.25) +  # Nokta değerlerini gösterme\n  labs(title = \"Gercek ve Tahmin Edilen Toplam Arac Sayisi\", x = \"Yil\", y = \"Toplam Arac Sayisi\") +\n  scale_x_continuous(breaks = seq(2002, round(prediction), by = 3)) +\n  scale_y_continuous(\n    labels = scales::label_number(scale = 1e-6, suffix = \"M\"),\n    breaks = seq(0, max(tum_veri$Toplam), by = 2e6)\n  ) +\n  theme_minimal()\n\nYukarıda 2002-2023 yılları arasındaki verilerden yola çıkarak, ülkemizde mevcutta 28.7M olan kayıtlı motor sayısının hangi yılda 40000000 değerine ulaşacağı tahmini grafik olarak gösterilmiştir. Tahminimize göre 2037 yılı öngörülmektedir."
  },
  {
    "objectID": "proje.html#yıllara-göre-değişken",
    "href": "proje.html#yıllara-göre-değişken",
    "title": "Türkiye’de Taşıt Sahipliği ve Kullanımı: Veriler ve Eğilimler",
    "section": "3.8 Yıllara Göre Değişken",
    "text": "3.8 Yıllara Göre Değişken\nlibrary(ggplot2)\nlibrary(tidyr)\nlibrary(scales)\nveri &lt;-\n  read.csv2(\"C:/Users/msaid/Desktop/yillik_arac_sayisi_2023.csv\",\n            header = TRUE)\nveri &lt;- veri[,!(names(veri) %in% c(\"Toplam\"))]\nveri &lt;- na.omit(veri)\nveri_long &lt;-\n  pivot_longer(veri,\n               cols = -Yil,\n               names_to = \"Degisken\",\n               values_to = \"Deger\")\nmax_deger &lt;- max(veri_long$Deger) / 1e6\nggplot(veri_long, aes(x = Yil, y = Deger / 1e6, fill = Degisken)) +  # Y eksenindeki değerler M kısaltması ile\n  geom_col(position = \"stack\") +\n  labs(title = \"Yillara Gore Degisken Degerleri\",\n       x = \"Yil\",\n       y = \"Deger\") +\n  scale_y_continuous(labels = label_number(scale = 1, suffix = \"M\"),\n                     breaks = seq(0, ceiling(max_deger) * 2, by = 2)) +  # Y ekseninde 2M aralıklı etiketler\n  scale_x_continuous(breaks = seq(2002, 2023, by = 3)) +  # X eksenindeki yıllar 2002'den başlayıp 3 yıl ara ile\n  scale_fill_brewer(palette = \"Set1\") +  # Renklendirme\n  theme_minimal() +  # Tema\n  theme(legend.position = \"bottom\")  # Lejantın konumu"
  },
  {
    "objectID": "proje.html#yıllara-göre-araç-sayısı-aralık-2023",
    "href": "proje.html#yıllara-göre-araç-sayısı-aralık-2023",
    "title": "Türkiye’de Taşıt Sahipliği ve Kullanımı: Veriler ve Eğilimler",
    "section": "3.1 Yıllara Göre Araç Sayısı – Aralık 2023",
    "text": "3.1 Yıllara Göre Araç Sayısı – Aralık 2023\nlibrary(dslabs)\nlibrary(ggplot2)\nlibrary(tidyverse)\nlibrary(dplyr)\nlibrary(scales)\nyillik_arac_sayisi_2023 |&gt; ggplot() +\n  geom_point(aes(x = Yil, y = Toplam), col = \"blue\") +\n  geom_label(aes(\n    x = Yil,\n    y = Toplam,\n    label = comma(Toplam / 10 ^ 6, accuracy = 0.1)\n  ),\n  vjust = -0.9,\n  size = 2.25) +\n  scale_x_continuous(breaks = seq(\n    from = min(yillik_arac_sayisi_2023$Yil),\n    to = max(yillik_arac_sayisi_2023$Yil),\n    by = 3\n  )) +\n  scale_y_continuous(\n    labels = label_number(scale = 1e-6, suffix = \"M\"),\n    breaks = seq(\n      from = min(yillik_arac_sayisi_2023$Toplam),\n      to = max(yillik_arac_sayisi_2023$Toplam),\n      by = 2 * 10 ^ 6\n    )\n  )\n\nYukarıdaki grafikte 2002-2003 yıl aralığı için Türkiyede’ ki toplam kayıtlı motorlu araç sayıları nokta grafik olarak  sunulmuştur. Grafik incelendiğinde 21 yıl içerisinde ülkemizdeki kayıtlı motorlu araç sayısı 20M artmış. En fazla artış 2.2M ille 2022-2023 yılları arasında olmuştur. Bunun nedeni Korona akabindeki normalleşme ile daha önce karşılanamayan birikmiş araç ihtiyaçların sağlanabilmesi."
  },
  {
    "objectID": "proje.html#yılına-kadar-araç-türlerinin-dağılımı",
    "href": "proje.html#yılına-kadar-araç-türlerinin-dağılımı",
    "title": "Türkiye’de Taşıt Sahipliği ve Kullanımı: Veriler ve Eğilimler",
    "section": "3.2 2023 Yılına Kadar Araç Türlerinin Dağılımı",
    "text": "3.2 2023 Yılına Kadar Araç Türlerinin Dağılımı\nAşağıdaki grafik 2002-2023 yılları arasındaki toplam araç sayılarının her bir yıl içerisindeki dağılımlarını göstermektedir. Bu garfikğe dıştan genel bir gözle bakıldığında dahi, toplam araç sayısındaki en etken değişkenin otomobil sayısı olduğu görülmektedir. Daha sonra etkili olan araçlar yıllara göre değişim ivmeleri neredeyse aynı olmakla birlikte motorsiklet ve kamyonettir. Geri kalan kamyon, minibüs, özel amaçlı, otobüs ve traktör her sene neredeyse aynıdır. Bu da değişkenlerdeki artışın ilk bakışta farkedilir derecede az olduğunu göstermektedir.\nlibrary(ggplot2)\nlibrary(tidyr)\nlibrary(scales)\nveri &lt;-\n  read.csv2(\"C:/Users/msaid/Desktop/yillik_arac_sayisi_2023.csv\",\n            header = TRUE)\nveri &lt;- veri[,!(names(veri) %in% c(\"Toplam\"))]\nveri &lt;- na.omit(veri)\nveri_long &lt;-\n  pivot_longer(veri,\n               cols = -Yil,\n               names_to = \"Degisken\",\n               values_to = \"Deger\")\nmax_deger &lt;- max(veri_long$Deger) / 1e6\nggplot(veri_long, aes(x = Yil, y = Deger / 1e6, fill = Degisken)) +  # Y eksenindeki değerler M kısaltması ile\n  geom_col(position = \"stack\") +\n  labs(title = \"Yillara Gore Degisken Degerleri\",\n       x = \"Yil\",\n       y = \"Deger\") +\n  scale_y_continuous(labels = label_number(scale = 1, suffix = \"M\"),\n                     breaks = seq(0, ceiling(max_deger) * 2, by = 2)) +  # Y ekseninde 2M aralıklı etiketler\n  scale_x_continuous(breaks = seq(2002, 2023, by = 3)) +  # X eksenindeki yıllar 2002'den başlayıp 3 yıl ara ile\n  scale_fill_brewer(palette = \"Set1\") +  # Renklendirme\n  theme_minimal() +  # Tema\n  theme(legend.position = \"bottom\")  # Lejantın konumu"
  },
  {
    "objectID": "proje.html#yakıt-türlerine-göre-ülkelerin-karşılaştırılması",
    "href": "proje.html#yakıt-türlerine-göre-ülkelerin-karşılaştırılması",
    "title": "Türkiye’de Taşıt Sahipliği ve Kullanımı: Veriler ve Eğilimler",
    "section": "3.7 Yakıt Türlerine Göre Ülkelerin Karşılaştırılması",
    "text": "3.7 Yakıt Türlerine Göre Ülkelerin Karşılaştırılması\n2022 yılındaki farklı ülkelerde gerçekleştirilen kara taşıtlarının satış verileri kullanılmıştır. Bu 10 Avrupa ülkesi arasında petrol ve dizel yakıtlı araçların satış oranının en yüksek olduğu ülkeler Hırvatistan ve Türkiye olmuştur. Türkiye incelendiğinde, diğer Avrupa ülkelerinin elektrikli araçlara geçiş süreçlerine yetişmek için hızlanılması gerektiği görülmektedir.\n\nlibrary(readr)\nlibrary(readxl)\nlibrary(dslabs)\nlibrary(tidyverse)\nlibrary(ggthemes)\n\nveri_2 &lt;- read_excel(\"../muy665-bahar2024-takim-ancuez/dataset/araç satış oranı.xlsx\")\n\nggplot(veri_2, aes(x = reorder(Ülke, Oran), y = Oran)) +\n  geom_bar(stat = \"identity\", fill = \"blue\") +\n  geom_text(aes(label = round(Oran, 2)), \n            vjust = -0.5, \n            size = 3.5) +\n  labs(title = \"Petrol ve Dizel Yakıtlı Kara Taşıtı Satış Oranı (2022)\",\n       x = \"Ülke\",\n       y = \"Oran\") +\n  theme_minimal()"
  },
  {
    "objectID": "proje.html#renklere-göre-otomobil-sayısı",
    "href": "proje.html#renklere-göre-otomobil-sayısı",
    "title": "Türkiye’de Taşıt Sahipliği ve Kullanımı: Veriler ve Eğilimler",
    "section": "3.8 Renklere Göre Otomobil Sayısı",
    "text": "3.8 Renklere Göre Otomobil Sayısı\ndata &lt;- data.frame(\n  Renk = c(\n    \"Gri\",\n    \"Beyaz\",\n    \"Mavi\",\n    \"Siyah\",\n    \"Kırmızı\",\n    \"Yeşil\",\n    \"Turuncu\",\n    \"Sarı\",\n    \"Kahverengi\",\n    \"Diğer\"\n  ),\n  OtomobilSayisi = c(\n    342175,\n    253851,\n    116412,\n    106873,\n    69766,\n    25279,\n    18828,\n    5245,\n    4660,\n    2679\n  )\n)\n\ndata$Dagilim &lt;- data$OtomobilSayisi / sum(data$OtomobilSayisi) * 100\n\nrenkler &lt;-\n  c(\"grey\",\n    \"white\",\n    \"blue\",\n    \"black\",\n    \"red\",\n    \"green\",\n    \"orange\",\n    \"yellow\",\n    \"brown\",\n    \"purple\")\n\npar(mar = c(5, 4, 4, 2) + 0.1, cex = 1.0)\n\nbarplot_heights &lt;-\n  barplot(\n    height = data$OtomobilSayisi,\n    names.arg = data$Renk,\n    col = renkler,\n    main = \"Renk - Otomobil Sayisi Dagilimi\",\n    xlab = \"Renk\",\n    ylab = \"Otomobil Sayisi\",\n    las = 2,\n    cex.names = 0.8\n  )\n\ntext(\n  x = barplot_heights,\n  y = data$OtomobilSayisi,\n  labels = sprintf(\"%.1f%%\\n(%d)\", data$Dagilim, data$OtomobilSayisi),\n  pos = 3,\n  cex = 0.8\n)\n\nBu grafikte 2023 yılı istatistiklerine göre Türkiye’ deki kayıtlı otomobillerin renk dağılımı gösterilmektedir: Görüldüğü üzere en fazla 342175 adet ile %36.4’ lük oranla Gri,253851 adet %26.8’ lük oranla Beyaz ve  11612 adet %12.3’ lük oranla mavi gelmektedir."
  },
  {
    "objectID": "proje.html#türkiyede-kentleşmenin-mobilitiye-etkileri",
    "href": "proje.html#türkiyede-kentleşmenin-mobilitiye-etkileri",
    "title": "Türkiye’de Taşıt Sahipliği ve Kullanımı: Veriler ve Eğilimler",
    "section": "4.4 Türkiyede Kentleşmenin Mobilitiye Etkileri",
    "text": "4.4 Türkiyede Kentleşmenin Mobilitiye Etkileri\nBu bölümde şehirlerdeki kentleşmenin mikromobiliteye ve trafikteki mobiliteye etkileri incelenmektedir. Analiz sonucunda vatandaşların kentleşmeyle beraber mobilite alım eğilimlerinde değişiklikler gözlemlenmiştir\n\nload(\"../muy665-bahar2024-takim-ancuez/dataset/kerem_ws.RData\")\n\nlibrary(dslabs)\nlibrary(ggplot2)\nlibrary(tidyverse)\nlibrary(ggthemes)\nlibrary(ggrepel)\n\nnlyfirstup &lt;- function(x) {\n  x = toupper(x)\n  x = tolower(x)\n  substr(x, 1, 1) &lt;- toupper(substr(x, 1, 1))\n  x\n}\n\n\n\nbileske |&gt; ggplot(aes(Motosiklet..2.,m2_basi_bina)) +  \n  geom_point(size = 3) +\n  geom_smooth(se = FALSE, method = \"gam\")+ \n  scale_x_log10() + \n  scale_y_log10() +\n  xlab(\"Number of motorcycles in traffic (log scale)\") + \n  ylab(\"Apartmens per km2 in the city (log scale)\") \n\n`geom_smooth()` using formula = 'y ~ s(x, bs = \"cs\")'\n\n\n\n\n\n\n\n\nbileske |&gt; ggplot(aes(motorsiklet_orani,m2_basi_bina)) +  \n  geom_point(size = 3) +\n  geom_smooth(se = FALSE, method = \"gam\")+ \n  scale_x_log10() + \n  scale_y_log10() +\n  xlab(\"Percentige of motorcyles in traffic (log scale)\") + \n  ylab(\"Aparments per km2 in the city (log scale)\") \n\n`geom_smooth()` using formula = 'y ~ s(x, bs = \"cs\")'\n\n\n\n\n\n\n\n\nbileske |&gt; ggplot(aes(Motosiklet..2.,m2_basi_insan)) +  \n  geom_point(size = 3) +\n  geom_smooth(se = FALSE, method = \"gam\")+ \n  scale_x_log10() + \n  scale_y_log10() +\n  xlab(\"Number of motorcycles in traffic (log scale)\") + \n  ylab(\"People per km2 in the city (log scale)\") \n\n`geom_smooth()` using formula = 'y ~ s(x, bs = \"cs\")'\n\n\n\n\n\n\n\n\nbileske |&gt; ggplot(aes(motorsiklet_orani,m2_basi_insan)) +  \n  geom_point(size = 3) +\n  geom_smooth(se = FALSE, method = \"gam\")+ \n  scale_x_log10() + \n  scale_y_log10() +\n  xlab(\"Percentige of motorcyles in traffic (log scale)\") + \n  ylab(\"People per km2 in the city (log scale)\") \n\n`geom_smooth()` using formula = 'y ~ s(x, bs = \"cs\")'\n\n\n\n\n\n\n\n\nistanbul_ozel |&gt; ggplot(aes(istasyon_sayisi,m2_basi_bina)) +  \n  geom_point(size = 3) +\n  geom_smooth(se = FALSE, method = \"gam\")+ \n  scale_x_log10() + \n  scale_y_log10() +\n  xlab(\"Number of bicycle stations (log scale)\") + \n  ylab(\"Apartments per km2 in the city (log scale)\") \n\n`geom_smooth()` using formula = 'y ~ s(x, bs = \"cs\")'\n\n\n\n\n\n\n\n\nistanbul_ozel |&gt; ggplot(aes(istasyon_sayisi,m2_basi_insan)) +  \n  geom_point(size = 3) +\n  geom_smooth(se = FALSE, method = \"gam\")+ \n  scale_x_log10() + \n  scale_y_log10() +\n  xlab(\"Number of bicycle stations (log scale)\") + \n  ylab(\"People per km2 in the city (log scale)\") \n\n`geom_smooth()` using formula = 'y ~ s(x, bs = \"cs\")'\n\n\n\n\n\n\n\n\nggplot(tasit_oran2, aes(x = \"\", y = oranlar, fill = tasit_tipi)) +\n  geom_bar(width = 1, stat = \"identity\") +\n  coord_polar(\"y\") +\n  labs(title = \"Türkiye Genelinde Taşıt Yüzdeleri\", x=NULL, y=NULL) +\n  theme(axis.text.x = element_blank()) +\n  geom_text(aes(label = paste0(round(oranlar, 1), \"%\")), position = position_stack(vjust = 0.5))\n\n\n\n\n\n\n\nggplot(tasit_nüfus2, aes(x = tasit_tipi, y = oranlar, fill = tasit_tipi)) +\n  geom_bar(width = 1, stat = \"identity\") +\n  labs(title = \"Araç Tipine Kişi Başı Düşen Araç Sayıları\", x=NULL, y=NULL) +\n  theme(axis.text.x = element_text(angle = 90, hjust=1)) \n\n\n\n\n\n\n\n\n======= # Sonuçlar ve Ana Çıkarımlar\n\nMotorlu Kara Taşıtları: TÜİK’in 2023-2024 verilerine göre, Türkiye’de motorlu kara taşıtlarının toplam sayısında önemli bir artış görülmüştür. Bu anlamda otomobiller, kamyonetler ve motosikletler özellikle dikkat çekmektedir. Ekonomideki iyileştirmeler ve uygun kredi koşulları, otomobil sayısının artmasına neden olabilir. Ticaret ve lojistik sektörlerindeki büyüme, motosiklet ve kamyonet sayısının artmasına neden olabilir. Genel trend, gelecekte motorlu taşıt sayısının artmaya devam edeceğini göstermektedir.\nElektrikli Araçlar: Türkiye, elektrikli araç kullanımı trendinde diğer Avrupa ülkelerine göre geride kalmıştır. 2022 yılında satılan araçların %90’ının petrol türevli yakıtlı araçlardan oluşması bu durumu açıkça göstermektedir. Ancak, tahmin modelleri, elektrikli araç sayısında önümüzdeki yıllarda önemli bir artış yaşanacağını öngörmektedir. Bu artış, teşvik politikaları, artan çevre bilinci ve teknolojideki gelişmelerin etkisiyle hızlanacaktır. Dolayısıyla, Türkiye’nin elektrikli araç pazarında gelecekteki büyüme potansiyeli oldukça yüksektir.\nMotorsikletler ve Bisikletler: Şehirlerde kentleşmeninde etkisiyle alım yönelimi otomobil tarafında olsa da, trafik ve yaya kargaşasında insanların motorsiklet yada bisiklet gibi daha küçük taşıtları kullanmaya yöneldiği belirlenmiştir. Mikromobilite ve bisiklet alanındaki trendlerde dağılım daha dağınıkken trafikte kullanılan motor sayısında trende daha yakın komşuluk izlenmekte. Bu noktada motorsiklet kullanımının daha çok benimsendiği ve mikromobilite, bisiklet gibi araçların henüz yeni topluma kazandırılmakta olduğu görülmektedir."
  },
  {
    "objectID": "proje.html#yılı-için-motor-sayısı-tahminleri",
    "href": "proje.html#yılı-için-motor-sayısı-tahminleri",
    "title": "Türkiye’de Taşıt Sahipliği ve Kullanımı: Veriler ve Eğilimler",
    "section": "4.2 2037 Yılı İçin Motor Sayısı Tahminleri",
    "text": "4.2 2037 Yılı İçin Motor Sayısı Tahminleri\ninstall.packages(\"tidyverse\")\nlibrary(tidyverse)\nyillik_arac_sayisi_2023 &lt;-\n  read.csv2(\"C:/Users/msaid/Desktop/yillik_arac_sayisi_2023.csv\",\n            header = TRUE)\nhead(yillik_arac_sayisi_2023)\nyillik_arac_sayisi_2024_regresyon &lt;-\n  lm(Yil ~ Toplam, data = yillik_arac_sayisi_2023)\nsummary(yillik_arac_sayisi_2024_regresyon)\nyeni_data &lt;- data.frame(Toplam = 40000000)\nprediction &lt;- predict(yillik_arac_sayisi_2024_regresyon, yeni_data)\ncat(\"Kayıtlı araç sayısının 40000000' u göreceği tahmini yıl:\",\n    prediction,\n    \"\\n\")\nyeni_veri &lt;- yillik_arac\n_sayisi_2023 %&gt;% select(Yil, Toplam)\ntahmin_verisi &lt;- data.frame(Yil = prediction,\n                            Toplam = 40000000)\ntum_veri &lt;- rbind(yeni_veri, tahmin_verisi)\nggplot(tum_veri, aes(x = Yil, y = Toplam)) +\n  geom_line() +\n  geom_point(color = \"red\") +\n  geom_text(aes(label = scales::number(\n    Toplam,\n    scale = 1e-6,\n    suffix = \"M\",\n    accuracy = 0.1\n  )),\n  vjust = -2.25,\n  size = 2.25) +  # Nokta değerlerini gösterme\n  labs(title = \"Gercek ve Tahmin Edilen Toplam Arac Sayisi\", x = \"Yil\", y = \"Toplam Arac Sayisi\") +\n  scale_x_continuous(breaks = seq(2002, round(prediction), by = 3)) +\n  scale_y_continuous(\n    labels = scales::label_number(scale = 1e-6, suffix = \"M\"),\n    breaks = seq(0, max(tum_veri$Toplam), by = 2e6)\n  ) +\n  theme_minimal()\n\nYukarıda 2002-2023 yılları arasındaki verilerden yola çıkarak, ülkemizde mevcutta 28.7M olan kayıtlı motor sayısının hangi yılda 40000000 değerine ulaşacağı tahmini grafik olarak gösterilmiştir. Tahminimize göre 2037 yılı öngörülmektedir."
  },
  {
    "objectID": "proje.html#yılı-için-motor-sayısı-tahmini",
    "href": "proje.html#yılı-için-motor-sayısı-tahmini",
    "title": "Türkiye’de Taşıt Sahipliği ve Kullanımı: Veriler ve Eğilimler",
    "section": "4.2 2037 Yılı İçin Motor Sayısı Tahmini",
    "text": "4.2 2037 Yılı İçin Motor Sayısı Tahmini\ninstall.packages(\"tidyverse\")\nlibrary(tidyverse)\nyillik_arac_sayisi_2023 &lt;-\n  read.csv2(\"C:/Users/msaid/Desktop/yillik_arac_sayisi_2023.csv\",\n            header = TRUE)\nhead(yillik_arac_sayisi_2023)\nyillik_arac_sayisi_2024_regresyon &lt;-\n  lm(Yil ~ Toplam, data = yillik_arac_sayisi_2023)\nsummary(yillik_arac_sayisi_2024_regresyon)\nyeni_data &lt;- data.frame(Toplam = 40000000)\nprediction &lt;- predict(yillik_arac_sayisi_2024_regresyon, yeni_data)\ncat(\"Kayıtlı araç sayısının 40000000' u göreceği tahmini yıl:\",\n    prediction,\n    \"\\n\")\nyeni_veri &lt;- yillik_arac\n_sayisi_2023 %&gt;% select(Yil, Toplam)\ntahmin_verisi &lt;- data.frame(Yil = prediction,\n                            Toplam = 40000000)\ntum_veri &lt;- rbind(yeni_veri, tahmin_verisi)\nggplot(tum_veri, aes(x = Yil, y = Toplam)) +\n  geom_line() +\n  geom_point(color = \"red\") +\n  geom_text(aes(label = scales::number(\n    Toplam,\n    scale = 1e-6,\n    suffix = \"M\",\n    accuracy = 0.1\n  )),\n  vjust = -2.25,\n  size = 2.25) +  # Nokta değerlerini gösterme\n  labs(title = \"Gercek ve Tahmin Edilen Toplam Arac Sayisi\", x = \"Yil\", y = \"Toplam Arac Sayisi\") +\n  scale_x_continuous(breaks = seq(2002, round(prediction), by = 3)) +\n  scale_y_continuous(\n    labels = scales::label_number(scale = 1e-6, suffix = \"M\"),\n    breaks = seq(0, max(tum_veri$Toplam), by = 2e6)\n  ) +\n  theme_minimal()\n\nYukarıda 2002-2023 yılları arasındaki verilerden yola çıkarak, ülkemizde mevcutta 28.7M olan kayıtlı motor sayısının hangi yılda 40000000 değerine ulaşacağı tahmini grafik olarak gösterilmiştir. Tahminimize göre 2037 yılı öngörülmektedir."
  },
  {
    "objectID": "proje.html#yılı-için-motorlu-araç-sayısı-tahmini",
    "href": "proje.html#yılı-için-motorlu-araç-sayısı-tahmini",
    "title": "Türkiye’de Taşıt Sahipliği ve Kullanımı: Veriler ve Eğilimler",
    "section": "4.2 2037 Yılı İçin Motorlu Araç Sayısı Tahmini",
    "text": "4.2 2037 Yılı İçin Motorlu Araç Sayısı Tahmini\ninstall.packages(\"tidyverse\")\nlibrary(tidyverse)\nyillik_arac_sayisi_2023 &lt;-\n  read.csv2(\"C:/Users/msaid/Desktop/yillik_arac_sayisi_2023.csv\",\n            header = TRUE)\nhead(yillik_arac_sayisi_2023)\nyillik_arac_sayisi_2024_regresyon &lt;-\n  lm(Yil ~ Toplam, data = yillik_arac_sayisi_2023)\nsummary(yillik_arac_sayisi_2024_regresyon)\nyeni_data &lt;- data.frame(Toplam = 40000000)\nprediction &lt;- predict(yillik_arac_sayisi_2024_regresyon, yeni_data)\ncat(\"Kayıtlı araç sayısının 40000000' u göreceği tahmini yıl:\",\n    prediction,\n    \"\\n\")\nyeni_veri &lt;- yillik_arac\n_sayisi_2023 %&gt;% select(Yil, Toplam)\ntahmin_verisi &lt;- data.frame(Yil = prediction,\n                            Toplam = 40000000)\ntum_veri &lt;- rbind(yeni_veri, tahmin_verisi)\nggplot(tum_veri, aes(x = Yil, y = Toplam)) +\n  geom_line() +\n  geom_point(color = \"red\") +\n  geom_text(aes(label = scales::number(\n    Toplam,\n    scale = 1e-6,\n    suffix = \"M\",\n    accuracy = 0.1\n  )),\n  vjust = -2.25,\n  size = 2.25) +  # Nokta değerlerini gösterme\n  labs(title = \"Gercek ve Tahmin Edilen Toplam Arac Sayisi\", x = \"Yil\", y = \"Toplam Arac Sayisi\") +\n  scale_x_continuous(breaks = seq(2002, round(prediction), by = 3)) +\n  scale_y_continuous(\n    labels = scales::label_number(scale = 1e-6, suffix = \"M\"),\n    breaks = seq(0, max(tum_veri$Toplam), by = 2e6)\n  ) +\n  theme_minimal()\n\nYukarıda 2002-2023 yılları arasındaki verilerden yola çıkarak, ülkemizde mevcutta 28.7M olan kayıtlı motor sayısının hangi yılda 40000000 değerine ulaşacağı tahmini grafik olarak gösterilmiştir. Tahminimize göre 2037 yılı öngörülmektedir."
  }
]